#include <msp430.h>
#include <stdint.h>

#define CALADC_15V_30C  *((unsigned int *)0x1A1A)                 // Temperature Sensor Calibration-30 C
                                                                  // See device datasheet for TLV table memory mapping
#define CALADC_15V_85C  *((unsigned int *)0x1A1C)                 // Temperature Sensor Calibration-High Temperature (85 for Industrial, 105 for Extended)

volatile float temp;
volatile float IntDegF;
volatile float IntDegC;

int count;

volatile int i = 0;

unsigned int a;

int j = 0;

#define BUTTON BIT2 //push button P4.1

void Sensor1();
void Sensor2();
void ADC_init();
void GPIO_init();

int main(void)
{
    WDTCTL = WDTPW | WDTHOLD;                                   // Stop WDT
    // Disable the GPIO power-on default high-impedance mode to activate
    // previously configured port settings
    PM5CTL0 &= ~LOCKLPM5;
    GPIO_init();
    //__bis_SR_register(LPM0_bits | GIE);                           // LPM0 with interrupts enabled
    //__no_operation();                                             // Only for debugger
    TB0CCTL0 |= CCIE;                                             // TBCCR0 interrupt enabled
    TB0CCR0 = 65535;
    TB0CTL = TBSSEL__ACLK | MC__UP;                               // ACLK, UP mode


    // Configure reference
    PMMCTL0_H = PMMPW_H;                                          // Unlock the PMM registers
    PMMCTL2 |= INTREFEN | TSENSOREN | REFVSEL_0;                  // Enable internal 1.5V reference and temperature sensor
    //__delay_cycles(400);                                          // Delay for reference settling


    while(1)
        {
            if(i == 0)
            {
                ADC_init();
                while ((ADCIFG & ADCIFG0) == 0);
                Sensor1();
                ADCCTL0 &= ~ADCIFG0;
                i = 1;
            }
            else if(i == 1)
            {

                Sensor2();
                ADCCTL0 &= ~ADCIFG0;
                i = 0;
            }
        }


}


void GPIO_init(){
    // Configure the ADC A1 pin
        P1SEL0 |=  BIT3;
        P1SEL1 |=  BIT3;

        //PIR
        P2DIR &= ~BIT2; // P2.2 becomes input
        P2REN |= BIT2;
        P2OUT |= BIT2;

}


void ADC_init(){

    // Configure ADC - Pulse sample mode; ADCSC trigger
        ADCCTL0 |= ADCSHT_8 | ADCON;                                  // ADC ON,temperature sample period>30us
        ADCCTL1 |= ADCSHP;                                            // s/w trig, single ch/conv, MODOSC
        ADCCTL2 &= ~ADCRES;                                         // clear ADCRES in ADCCTL
        ADCCTL2 |= ADCRES_2;                                          // 12-bit conversion results
        ADCMCTL0 |= ADCSREF_1 | ADCINCH_1;                           // ADC input ch A1 => temp sense
        ADCIE |=ADCIE0;                                               // Enable the Interrupt request for a completed ADC_B conversion
        ADCCTL0 |= ADCENC + ADCSC + ADCMSC;
}


void Sensor1()
{
    temp = ADCMEM0;
    // Temperature in Celsius
    // The temperature (Temp, C)=
    IntDegC = (temp-CALADC_15V_30C)*(85-30)/(CALADC_15V_85C-CALADC_15V_30C)+30;

    // Temperature in Fahrenheit
    // Tf = (9/5)*Tc | 32
    IntDegF =((9*IntDegC)/5)+32;
}

void Sensor2()
{


            if((P2IN & BUTTON) == 0x04){

            _delay_cycles(5000);

            if((P2IN & BUTTON) == 0x04){

                j=1;

                if(j == 1){

                a=1;

                }

                else {

                a=0;

                }}





            }

            while((P2IN & BUTTON) == 0x04);

            j=0;

            a=0;


        }



